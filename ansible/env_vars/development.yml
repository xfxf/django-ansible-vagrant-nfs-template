---

# Instance settings (change this)
instance_ipaddr: "192.168.42.100"
project_hostname: "exampleproject" #VALUEHERE.local available via MDNS.  Alphanumeric only.

# Application settings (optional - change this)
django_settings_file: "{{ django_project_name }}.settings" #.development - should match settings structure
django_secret_key: "{{ django_secret_key.stdout }}"

# Database settings.
db_user: "{{ django_project_name }}"
db_name: "{{ django_project_name }}"
db_password: password

# Gunicorn settings. For the number of workers, a good rule to follow is
# 2 x number of CPUs + 1
gunicorn_num_workers: 3

# Setting this to 1 will restart the Gunicorn process each time
# you make a request, basically reloading the code. Very handy
# when developing. Set to 0 for unlimited requests (default).
gunicorn_max_requests: 0

# Nginx settings.
nginx_server_name: "{{ project_hostname }}"
ssl_src_dir: ssl_self_signed
ssl_dest_dir: /etc/ssl/tls
ssl_key_password: password

# RabbitMQ settings.
rabbitmq_server_name: "{{ project_hostname }}"

rabbitmq_admin_user: admin
rabbitmq_admin_password: password

rabbitmq_application_vhost: "{{ django_project_name }}"
rabbitmq_application_user: "{{ django_project_name }}"
rabbitmq_application_password: password

# Celery settings.
celery_num_workers: 2
flower_admin_password: password

broker_url: "amqp://{{ rabbitmq_application_user }}:{{ rabbitmq_application_password }}@localhost/{{ rabbitmq_application_vhost }}"

run_django_db_migrations: yes
run_django_collectstatic: yes

